definitions:
  dto.CategoryResponse:
    properties:
      builtin:
        type: boolean
      id:
        description: string для id
        type: string
      name:
        type: string
    type: object
  dto.CreateCategoryRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  dto.CreateExpenseRequest:
    properties:
      amount:
        type: number
      category:
        type: string
      comment:
        type: string
      date:
        type: string
      travel_id:
        type: integer
    required:
    - amount
    - category
    - date
    - travel_id
    type: object
  dto.CreateTravelRequest:
    properties:
      end_date:
        type: string
      start_date:
        description: формат YYYY-MM-DD
        type: string
      title:
        type: string
    type: object
  dto.ExpenseResponse:
    properties:
      amount:
        type: number
      category:
        type: string
      comment:
        type: string
      date:
        type: string
      id:
        type: string
    type: object
  dto.UpdateExpenseRequest:
    properties:
      amount:
        type: number
      category:
        type: string
      comment:
        type: string
      date:
        description: формат YYYY-MM-DD
        type: string
    type: object
  dto.UserRequest:
    properties:
      login:
        maxLength: 50
        minLength: 3
        type: string
      password:
        minLength: 6
        type: string
    required:
    - login
    - password
    type: object
info:
  contact: {}
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Аутентифицирует пользователя и устанавливает куку авторизации
      parameters:
      - description: Данные пользователя для входа
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Вход пользователя
      tags:
      - auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Регистрирует нового пользователя и устанавливает куку авторизации
      parameters:
      - description: Данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Регистрация пользователя
      tags:
      - auth
  /api/categories:
    get:
      consumes:
      - application/json
      description: Возвращает список категорий расходов для текущего пользователя
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CategoryResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить категории пользователя
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: Добавляет новую категорию расходов для авторизованного пользователя
      parameters:
      - description: Данные категории
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/dto.CreateCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать категорию
      tags:
      - categories
  /api/categories/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет пользовательскую категорию по ID, если она не системная
        и не используется
      parameters:
      - description: ID категории
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удалить категорию
      tags:
      - categories
  /api/expenses:
    get:
      consumes:
      - application/json
      description: Возвращает список расходов текущего пользователя по категории и
        дате (опционально)
      parameters:
      - description: Категория
        in: query
        name: category
        type: string
      - description: Дата начала, формат YYYY-MM-DD
        in: query
        name: from
        type: string
      - description: Дата окончания, формат YYYY-MM-DD
        in: query
        name: to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ExpenseResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить расходы пользователя
      tags:
      - expenses
    post:
      consumes:
      - application/json
      description: Добавляет новый расход для авторизованного пользователя
      parameters:
      - description: Данные расхода
        in: body
        name: expense
        required: true
        schema:
          $ref: '#/definitions/dto.CreateExpenseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать расход
      tags:
      - expenses
  /api/expenses/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет расход текущего пользователя по ID
      parameters:
      - description: ID расхода
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удалить расход
      tags:
      - expenses
    put:
      consumes:
      - application/json
      description: Обновляет данные расхода по его ID для текущего пользователя
      parameters:
      - description: ID расхода
        in: path
        name: id
        required: true
        type: integer
      - description: Новые данные расхода
        in: body
        name: expense
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateExpenseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Обновить расход
      tags:
      - expenses
  /api/travel:
    post:
      consumes:
      - application/json
      description: Создает запись о путешествии для авторизованного пользователя
      parameters:
      - description: Данные путешествия
        in: body
        name: travel
        required: true
        schema:
          $ref: '#/definitions/dto.CreateTravelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать новое путешествие
      tags:
      - travel
swagger: "2.0"
